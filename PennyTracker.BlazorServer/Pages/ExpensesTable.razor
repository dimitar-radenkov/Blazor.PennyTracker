@if (this.ViewModel.SelectedPeriod == null)
{
    <h3>Loading...</h3>
    <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
}
else
{

<div class="row justify-content-between">

    <div>
        <RadzenButton Text="Add"
                      Click="args => ViewModel.OnButtonAddClickAsync()"
                      ButtonStyle="ButtonStyle.Primary"/>
    </div>

    <div class="d-flex align-items-center">
        <label style="margin-right:5px">Items per page</label>
        <RadzenDropDown TValue="int"
                        Data="this.ViewModel.ItemsPerPage"
                        @bind-Value="this.ViewModel.SelectedItemsPerPage"
                        Change="args => this.ViewModel.OnItemsPerPageChangedAsync(args)"/>

        <label style="margin-right:5px; margin-left:15px">Period</label>
        <RadzenDropDown TValue="string"
                        Data="this.ViewModel.Periods"
                        @bind-Value="this.ViewModel.SelectedPeriod"
                        Change="args => this.ViewModel.OnPeriodChangedAsync(args)" />
    </div>

</div>
<div class="row">
    <RadzenGrid Data="@this.ViewModel.Transactions" 
                AllowSorting="true" 
                AllowPaging="true" 
                PageSize="@this.ViewModel.SelectedItemsPerPage">
        <Columns>
            <RadzenGridColumn TItem="Expense"
                              Property="Category"
                              Title="Category"
                              Width="120px">
                <Template Context="ctx">
                    <div class="">
                        <CategoryIcon Category="ctx.Category" />
                        <RadzenLabel Text="@ctx.Category.ToString()" Style="margin-left:5px" />
                    </div>
                </Template>
            </RadzenGridColumn>

            <RadzenGridColumn TItem="Expense"
                              Property="Description"
                              Title="Description"
                              Type="string" />

            <RadzenGridColumn TItem="Expense"
                              Property="SpentDate"
                              Type="integer"
                              Title="Date" />

            <RadzenGridColumn TItem="Expense"
                              Property="Amount"
                              Title="Amount"
                              Type="number" />

            <RadzenGridColumn TItem="Expense" Filterable="false" Width="150px" Sortable="false">
                <Template Context="ctx">
                    <RadzenButton Icon="edit"
                                  Attributes="this.ViewModel.EditButtonAttributes"
                                  ButtonStyle="ButtonStyle.Info"
                                  Click="s => ViewModel.OnButtonEditClickAsync(ctx.Id)"></RadzenButton>
                    <RadzenButton Icon="delete"
                                  Style="margin-right:5px"
                                  Attributes="this.ViewModel.DeleteButtonAttributes"
                                  ButtonStyle="ButtonStyle.Danger"
                                  Click="s => ViewModel.OnButtonDeleteClickAsync(ctx.Id)"></RadzenButton>
                </Template>
            </RadzenGridColumn>

        </Columns>
    </RadzenGrid>
</div>
}

@code
{
    [Inject]
    public IExpensesTableViewModel ViewModel { get; set; }

    public void OnLoadData(object s)
    {

    }

    protected override Task OnInitializedAsync()
    {
        return this.ViewModel.OnInitalializedAsync();
    }
}
